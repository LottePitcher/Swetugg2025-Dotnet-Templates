name: Deploy To Cloud

on:
  workflow_call:
    secrets:
      projectId: 
        required: true
      umbracoCloudApiKey:
        required: true
      umbracoCloudJson:
        required: true
      deployLicenseKey:
        required: true
      formsLicenseKey:
        required: true

env:
  pathToWebsite: "PATH_TO_WEB_FOLDER"

jobs:
  doDeployment:
    name: Do Deployment to cloud
    runs-on: ubuntu-latest
    outputs: 
      runningDeploymentId: ${{ steps.deployment-meta.outputs.deploymentId }}
    steps:
      - uses: actions/checkout@v4

      # reset the umbraco-cloud.json file from Secret
      - name: Umbraco Cloud Json
        working-directory: ${{env.pathToWebsite}}
        shell: pwsh
        run: set-content 'umbraco-cloud.json' -value '${{ secrets.umbracoCloudJson }}' 

      # reset Deploy license key from Secret
      - name: Deploy License Key
        working-directory: "${{env.pathToWebsite}}/umbraco/Licenses"
        shell: pwsh
        run: set-content 'umbracoDeploy.lic' -value '${{ secrets.deployLicenseKey }}' 

      # reset Forms license key from Secret
      - name: Forms License Key
        working-directory: "${{env.pathToWebsite}}/umbraco/Licenses"
        shell: pwsh
        run: set-content 'umbracoForms.lic' -value '${{ secrets.formsLicenseKey }}' 

      # switch the gitignore files so cloud does not ignore the build frontend assets
      - name: Prepare Cloud Git Ignore
        run: cp cloud.gitignore .gitignore
        shell: bash

      # zip everything, except what is defined in the 'cloud.zipignore'
      - name: Zip Source Code
        run: zip -r sources.zip . -x@cloud.zipignore
        shell: bash

      # Request to prepare a deployment
      # - sets the commit message to be used in cloud 
      # - supplies you with a deploymentId to be used in the rest of the process
      - name: Create Deployment Meta
        id: deployment-meta
        shell: pwsh
        run: >
          ${{GITHUB.WORKSPACE}}/.github/powershell/New-Deployment.ps1 
          -ProjectId ${{ secrets.projectId }} 
          -ApiKey ${{ secrets.umbracoCloudApiKey }} 
          -CommitMessage "Run number ${{github.run_number}}" 
          -PipelineVendor GITHUB

      # Upload your zip file
      - name: Post Zip
        shell: pwsh
        run: >
          ${{GITHUB.WORKSPACE}}/.github/powershell/Add-DeploymentPackage.ps1 
          -ProjectId ${{ secrets.projectId }} 
          -DeploymentId ${{ steps.deployment-meta.outputs.deploymentId }} 
          -ApiKey ${{ secrets.umbracoCloudApiKey }} 
          -FilePath sources.zip

      # Actually request to start the deployment process in cloud
      - name: Request Start Deployment
        shell: pwsh
        run: >
          ${{GITHUB.WORKSPACE}}/.github/powershell/Start-Deployment.ps1 
          -ProjectId ${{ secrets.projectId }} 
          -DeploymentId ${{ steps.deployment-meta.outputs.deploymentId }} 
          -ApiKey ${{ secrets.umbracoCloudApiKey }}

  awaitDeploymentFinished:
    name: Await deployment to finish
    runs-on: ubuntu-latest
    needs: doDeployment
    steps:
      - uses: actions/checkout@v4

      # Poll until deployment finishes 
      - name: Wait for deployment completed 
        shell: pwsh
        env: 
          runningDeploymentId: ${{ needs.doDeployment.outputs.runningDeploymentId }}
        run: >
          ${{GITHUB.WORKSPACE}}/.github/powershell/Test-DeploymentStatus.ps1 
          -ProjectId ${{ secrets.projectId }} 
          -DeploymentId ${{ secrets.runningDeploymentId }} 
          -ApiKey ${{ secrets.umbracoCloudApiKey }}
